#!/usr/bin/env python3
"""
One-liner installer for DevOps CLI
Usage: curl -sSL https://raw.githubusercontent.com/yourusername/devops-cli/main/install | python3
"""

import urllib.request
import tempfile
import os
import sys
import subprocess
import zipfile
from pathlib import Path

def download_and_install():
    """Download and install the devops-cli CLI globally"""
    
    print("üöÄ DevOps CLI - Quick Install")
    print("=" * 50)
    
    # GitHub repository details
    repo = "tohidhanfi20/devops-cli"
    branch = "main"
    
    # Download URL
    download_url = f"https://github.com/{repo}/archive/refs/heads/{branch}.zip"
    
    print("üì• Downloading DevOps CLI...")
    
    try:
        # Download the repository
        with urllib.request.urlopen(download_url) as response:
            zip_data = response.read()
        
        # Extract to temporary directory
        with tempfile.TemporaryDirectory() as temp_dir:
            temp_path = Path(temp_dir)
            zip_file = temp_path / "repo.zip"
            
            with open(zip_file, 'wb') as f:
                f.write(zip_data)
            
            with zipfile.ZipFile(zip_file, 'r') as zip_ref:
                zip_ref.extractall(temp_path)
            
            # Find the extracted directory
            extracted_dir = None
            for item in temp_path.iterdir():
                if item.is_dir() and item.name.startswith("devops-cli"):
                    extracted_dir = item
                    break
            
            if not extracted_dir:
                print("‚ùå Failed to extract repository")
                return False
            
            # The extracted directory IS the devops-cli directory
            devops_dir = extracted_dir
            
            print("üîß Installing DevOps CLI globally...")
            
            # Check if pip is available first
            pip_available = False
            try:
                subprocess.run([sys.executable, "-m", "pip", "--version"], 
                              check=True, capture_output=True, text=True)
                print("‚úÖ pip is available")
                pip_available = True
            except (subprocess.CalledProcessError, FileNotFoundError):
                print("‚ö†Ô∏è  pip not found, trying to install it...")
                try:
                    subprocess.run([sys.executable, "-m", "ensurepip", "--upgrade"], check=True)
                    print("‚úÖ pip installed successfully")
                    pip_available = True
                except subprocess.CalledProcessError:
                    print("‚ö†Ô∏è  pip not available, will run directly without installation")
                    pip_available = False
            
            if pip_available:
                # Install using pip in development mode for global access
                result = subprocess.run([
                    sys.executable, "-m", "pip", "install", "-e", "."
                ], cwd=str(devops_dir), capture_output=True, text=True)
                
                if result.returncode == 0:
                    print("‚úÖ DevOps CLI installed successfully!")
                    print("\nüéâ You can now use 'devops-cli' from anywhere!")
                    print("üí° Try: devops-cli --help")
                    return True
                else:
                    print(f"‚ùå pip installation failed: {result.stderr}")
                    print("üîÑ Falling back to direct execution...")
                    pip_available = False
            
            if not pip_available:
                # Run directly without installation
                print("üöÄ Running DevOps CLI directly...")
                print(f"üìÅ CLI location: {devops_dir}")
                print("\nüí° To use the CLI, run:")
                print(f"   cd {devops_dir}")
                print("   python3 main.py init")
                print("\nüéâ DevOps CLI is ready to use!")
                return True
                
    except Exception as e:
        print(f"‚ùå Installation failed: {e}")
        return False

if __name__ == "__main__":
    success = download_and_install()
    if success:
        print("\n‚úÖ Installation completed successfully!")
        print("You can now use: devops-cli --help")
    else:
        print("\n‚ùå Installation failed!")
        sys.exit(1)